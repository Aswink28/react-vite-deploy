<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Menon Pai Resource Desk</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        :root {
            --primary-color: #4c2d6a;
            --secondary-color: #6a3c9a;
            --accent-color: #9c4dca;
            --light-color: #f8f9fa;
            --dark-color: #212529;
        }
        
        body {
            background-color: var(--primary-color);
            color: white;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        .container {
            max-width: 1400px;
        }
        
        h2 {
            font-weight: 700;
            margin-bottom: 2rem;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
            letter-spacing: 1px;
            color: white;
            padding: 15px 0;
            border-bottom: 2px solid var(--accent-color);
        }
        
        .dashboard-card {
            background: linear-gradient(135deg, var(--secondary-color), var(--accent-color));
            border-radius: 12px;
            padding: 20px;
            text-align: center;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: center;
            border: none;
        }
        
        .dashboard-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
        }
        
        .dashboard-card .number {
            font-size: 1.8rem;
            font-weight: 700;
            margin-bottom: 5px;
        }
        
        .dashboard-card .label {
            font-size: 0.9rem;
            opacity: 0.9;
            text-transform: uppercase;
            letter-spacing: 1px;
        }
        
        .chart-container {
            background: white;
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
            height: 100%;
        }
        
        .client-group {
            background: linear-gradient(135deg, var(--secondary-color), var(--accent-color));
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            height: 100%;
            
        }
        
        .client-group h5 {
            text-align: center;
            margin-bottom: 20px;
            font-weight: 600;
            color: white;
            text-transform: uppercase;
            letter-spacing: 1px;
            /* border-bottom: 1px solid rgba(255, 255, 255, 0.2); */
            padding-bottom: 10px;
        }
        
        .client-group .box {
            background: white;
            color: var(--dark-color);
            padding: 12px;
            text-align: center;
            border-radius: 8px;
            margin: 8px 0;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 500;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            border: none;
        }
        
        .client-group .box:hover {
            background: var(--accent-color);
            color: white;
            transform: translateX(5px);
        }
        
        .client-group .box.active {
            background: var(--accent-color);
            color: white;
            font-weight: 600;
        }
        
        @media (max-width: 768px) {
            .dashboard-card .number {
                font-size: 1.5rem;
            }
            
            .dashboard-card .label {
                font-size: 0.8rem;
            }
            
            .client-group .box {
                padding: 10px;
                font-size: 0.9rem;
            }
        }

        /* New styles for the flexbox layout */
        .filter-container {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .filter-row {
            display: flex;
            justify-content: space-between;
            gap: 10px;
        }

        .filter-row .box {
            flex: 1;
            min-width: 0;
            padding: 10px;
            text-align: center;
        }

        .client-group {
            display: flex;
            flex-direction: column;
            height: 285px;
        }

        .client-group h5 {
            margin-bottom: 10px;
        }
        #refresh-client-btn {
    cursor: pointer;
    transition: transform 0.3s ease;
}
#refresh-client-btn:hover {
    transform: rotate(30deg);
    background: rgba(255,255,255,0.3);
}
    </style>
</head>
<body>
    <div class="container mt-4">
        <h2 class="text-center"><i class="fas fa-tachometer-alt me-2"></i>MENON PAI RESOURCE DESK</h2>
        
        
        <div class="row">
            <div class="col-md-3">
                <div class="client-group">
                    <div class="client-group-header" style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px; border-bottom: 1px solid rgba(255, 255, 255, 0.2); ">
                        <h5 style="margin: 0;"><i class="fas fa-users me-2"></i>CLIENT GROUP</h5>
                        <button id="refresh-client-btn" class="btn btn-sm" 
                                style="background: rgba(255,255,255,0.2); color: white; border: none; padding: 3px 8px;margin-top: -10px;">
                            <i class="fas fa-sync-alt"></i>
                        </button>
                    </div>
                    <div class="filter-container">
                        <!-- Pair 1 -->
                        <div class="filter-row">
                            <div class="box" onclick="filterData('ARTICLE')">ARTICLE</div>
                            <div class="box" onclick="filterData('FOUNDER')">FOUNDER</div>
                            
                        </div>
                        
                        <!-- Pair 2 -->
                        <div class="filter-row">
                            <div class="box" onclick="filterData('COMPANY')">COMPANY</div>
                            <div class="box" onclick="filterData('INDIVIDUAL')">INDIVIDUAL</div>
                        </div>
                        
                        <!-- Pair 3 -->
                        <div class="filter-row" style="align-items: center;text-align: center;">
                            <div class="box" onclick="filterData('CORPORATE')">CORPORATE</div>
                            <div class="box" onclick="filterData('LIMITED LIABILITY')">LTD LIABILITY</div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-9" style="margin-top:-15px;">
                <div class="row text-center my-4" >
                    <div class="col-md-3 mb-3">
                        <div class="dashboard-card">
                            <div class="number" id="total-client">0</div>
                            <div class="label">TOTAL CLIENT</div>
                        </div>
                    </div>
                    <div class="col-md-3 mb-3">
                        <div class="dashboard-card">
                            <div class="number" id="total-units">0</div>
                            <div class="label">TOTAL UNITS</div>
                        </div>
                    </div>
                    <div class="col-md-3 mb-3">
                        <div class="dashboard-card">
                            <div class="number" id="total-task-duration">0</div>
                            <div class="label">TOTAL TASK DURATION</div>
                        </div>
                    </div>
                    <div class="col-md-3 mb-3">
                        <div class="dashboard-card">
                            <div class="number" id="total-productivity">7.30K</div>
                            <div class="label">PRODUCTIVITY</div>
                        </div>
                    </div>
                </div>
                
                <div class="row text-center my-4">
                    <div class="col-md-3 mb-3">
                        <div class="dashboard-card">
                            <div class="number" id="total-employee">0</div>
                            <div class="label">TOTAL EMPLOYEE</div>
                        </div>
                    </div>
                    <div class="col-md-3 mb-3">
                        <div class="dashboard-card">
                            <div class="number" id="total-task-description">0</div>
                            <div class="label">TASK DESCRIPTION</div>
                        </div>
                    </div>
                    <div class="col-md-3 mb-3">
                        <div class="dashboard-card">
                            <div class="number" id="total-hours">0</div>
                            <div class="label">TOTAL HOURS</div>
                        </div>
                    </div>
                    <div class="col-md-3 mb-3">
                        <div class="dashboard-card">
                            <div class="number" id="non-productivity">2.51K</div>
                            <div class="label">NON-PRODUCTIVITY</div>
                        </div>
                    </div>
                </div>
                
                
            </div>
            <div class="row">
                <!-- Pie Chart Column (col-md-4) -->
                <div class="col-md-4 pe-1"> <!-- pe-1 adds small right padding -->
                    <div class="pie-chart-wrapper" style="background: white; border-radius: 12px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);height: 350px;">
                        <!-- Heading div -->
                        <div style="padding: 15px 20px; border-bottom: 1px solid #eee;">
                            <h5 style="margin: 0; color: #333; font-weight: 600; text-align: center;">
                                Sum of the Total Units by Company
                            </h5>
                        </div>
                        
                        <!-- Chart container -->
                        <div style="display: flex; padding: 20px;height:300px;">
                            <!-- Chart Area (Left) -->
                            <div style="flex: 0 0 60%;">
                                <canvas id="pieChart" style="max-width: 100%;"></canvas>
                            </div>
                            
                            <!-- Legend Area (Right) -->
                            <div style="flex: 1; display: flex; flex-direction: column; padding-left: 15px; border-left: 1px solid #eee; margin-left: 15px;">
                                <h6 style="margin: 0 0 10px 0; color: #333; font-weight: 500; font-size: 14px;">
                                    Client Group
                                </h6>
                                <div id="pieLegend" style="overflow-y: auto; max-height: 250px;"></div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Bar Chart Column (col-md-8) -->
                <div class="col-md-5 ps-1"> <!-- ps-1 adds small left padding -->
                    <div class="chart-container" style="background: white; border-radius: 12px; box-shadow: 0 4px 8px rgba(0,0,0,0.1); height: 350px; padding: 20px;">
                        <canvas id="barChart"></canvas>
                    </div>
                </div>
            </div>
    <script>
      let allData = [];
let pieChart = null;

// Helper function to format numbers with "k" notation
function formatNumber(num) {
    if (num >= 1000) {
        return (num / 1000).toFixed(num % 1000 !== 0 ? 1 : 0) + 'k';
    }
    return num.toString();
}

async function fetchClientData() {
    try {
        const response = await fetch('data.json'); // Update with actual path
        const data = await response.json();
        allData = data; // Store all data for filtering
        
        updateDashboard(allData);
        createPieChart(allData); // Initialize the chart with all data
    } catch (error) {
        console.error('Error fetching client data:', error);
    }
}

function filterData(clientGroup) {
    console.log('Filtering for:', clientGroup); // Check the value being passed
    const filteredData = allData.filter(item => item.Client_Group === clientGroup);
    updateDashboard(filteredData);
    updatePieChart(filteredData); // Update the pie chart based on the filtered data
}

function updateDashboard(data) {
    const uniqueClients = new Set(data.map(item => item.Client));
    document.getElementById('total-client').innerHTML = formatNumber(uniqueClients.size);

    const totalUnits = data.reduce((sum, item) => sum + (item.Total_Units || 0), 0);
    document.getElementById('total-units').innerHTML = formatNumber(totalUnits);

    const totalTaskDuration = data.reduce((sum, item) => sum + (item.Task_Duration || 0), 0);
    document.getElementById('total-task-duration').innerHTML = formatNumber(totalTaskDuration);

    const uniqueEmployees = new Set(data.map(item => item.Employee));
    document.getElementById('total-employee').innerHTML = formatNumber(uniqueEmployees.size);

    const uniqueTaskDescriptions = new Set(data.map(item => item.Task_Description));
    document.getElementById('total-task-description').innerHTML = formatNumber(uniqueTaskDescriptions.size);

    const totalHours = data.reduce((sum, item) => sum + (item.Task_Duration_by_Hour || 0), 0);
    document.getElementById('total-hours').innerHTML = formatNumber(totalHours);
}

function createPieChart(data) {
    const pieCtx = document.getElementById('pieChart').getContext('2d');
    const legendContainer = document.getElementById('pieLegend');

    // Set white background for canvas
    pieCtx.canvas.style.background = 'white';
    
    const clientGroups = [...new Set(data.map(item => item.Client_Group))];
    const totalUnitsByGroup = clientGroups.map(group => {
        return data.filter(item => item.Client_Group === group)
                   .reduce((sum, item) => sum + (item.Total_Units || 0), 0);
    });

    pieChart = new Chart(pieCtx, {
        type: 'doughnut',
        data: {
            labels: clientGroups,
            datasets: [{
                data: totalUnitsByGroup,
                backgroundColor: ['#4CAF50', '#FF9800', '#2196F3', '#9C27B0', '#E91E63', '#607D8B'],
                borderColor: 'white',
                borderWidth: 2
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: true,
            plugins: {
                legend: { display: false },
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            return context.label + ': ' + formatNumber(context.raw);
                        }
                    }
                }
            },
            cutout: '50%',
            radius: '90%'
        },
        plugins: [{
            id: 'customLegend',
            afterUpdate(chart) {
                const ul = document.createElement('ul');
                ul.style.listStyle = 'none';
                ul.style.padding = '0';
                ul.style.margin = '0';
                
                chart.data.datasets[0].data.forEach((value, i) => {
                    const li = document.createElement('li');
                    li.style.display = 'flex';
                    li.style.alignItems = 'center';
                    li.style.marginBottom = '10px';
                    
                    const colorBox = document.createElement('span');
                    colorBox.style.display = 'inline-block';
                    colorBox.style.width = '20px';
                    colorBox.style.height = '20px';
                    colorBox.style.marginRight = '10px';
                    colorBox.style.borderRadius = '50%';
                    colorBox.style.backgroundColor = chart.data.datasets[0].backgroundColor[i];
                    colorBox.style.border = '2px solid white';
                    colorBox.style.boxShadow = '0 2px 4px rgba(0,0,0,0.1)';
                    
                    const text = document.createElement('span');
                    text.textContent = `${chart.data.labels[i]}: ${formatNumber(value)}`;
                    text.style.fontSize = '10px';
                    text.style.fontWeight='1000';
                    text.style.color = '#333';
                    
                    li.appendChild(colorBox);
                    li.appendChild(text);
                    ul.appendChild(li);
                });
                
                legendContainer.innerHTML = '';
                legendContainer.appendChild(ul);
            }
        }]
    });
}
function updatePieChart(data) {
    if (pieChart) {
        const clientGroups = [...new Set(data.map(item => item.Client_Group))];
        const totalUnitsByGroup = clientGroups.map(group => {
            return data.filter(item => item.Client_Group === group)
                       .reduce((sum, item) => sum + (item.Total_Units || 0), 0);
        });

        pieChart.data.labels = clientGroups;
        pieChart.data.datasets[0].data = totalUnitsByGroup;
        pieChart.update(); // Update the chart with new data
    }
}

fetchClientData();

const barCtx = document.getElementById('barChart').getContext('2d');
new Chart(barCtx, {
    type: 'bar',
    data: {
        labels: ['Article', 'LTD Liability', 'Individual', 'Founder', 'Company', 'Corporate'],
        datasets: [{
            label: 'Total Units',
            data: [0, 130, 1010, 2510, 2700, 3460],
            backgroundColor: ['#E91E63', '#9C27B0', '#3F51B5', '#2196F3', '#FF9800', '#4CAF50']
        }]
    },
    options: {
        plugins: {
            tooltip: {
                callbacks: {
                    label: function(context) {
                        return context.dataset.label + ': ' + formatNumber(context.raw);
                    }
                }
            }
        },
        scales: {
            y: {
                ticks: {
                    callback: function(value) {
                        return formatNumber(value);
                    }
                }
            }
        }
    }
});
document.getElementById('refresh-client-btn').addEventListener('click', function() {
    // Get the refresh icon
    const icon = this.querySelector('i');
    
    // Show loading spinner
    icon.className = 'fas fa-spinner fa-spin';
    
    // Refresh all data
    fetchClientData().finally(() => {
        // Restore sync icon when complete
        icon.className = 'fas fa-sync-alt';
        
        // Reset any active filters (optional)
        updateDashboard(allData);
        updatePieChart(allData);
    });
    
    // Prevent default behavior
    return false;
});
    </script>
</body>
</html>